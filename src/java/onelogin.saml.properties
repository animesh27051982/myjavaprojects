#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  true

#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://enspir.net

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://rcs.flowserve.com/samlAssertionConsumer.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = https://rcs.flowserve.com/samlLogout.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert = MIIFwzCCA6ugAwIBAgIJAMAecLtTTDi1MA0GCSqGSIb3DQEBCwUAMHgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJUWDEOMAwGA1UEBwwFUGxhbm8xDzANBgNVBAoMBkVuc3BpcjEaMBgGA1UEAwwRcmNzLmZsb3dzZXJ2ZS5jb20xHzAdBgkqhkiG9w0BCQEWEGtlbGx5QGVuc3Bpci5jb20wHhcNMTgwNzI5MTcxMTI1WhcNMTgwODI4MTcxMTI1WjB4MQswCQYDVQQGEwJVUzELMAkGA1UECAwCVFgxDjAMBgNVBAcMBVBsYW5vMQ8wDQYDVQQKDAZFbnNwaXIxGjAYBgNVBAMMEXJjcy5mbG93c2VydmUuY29tMR8wHQYJKoZIhvcNAQkBFhBrZWxseUBlbnNwaXIuY29tMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAlU7BT4qNUhsqhHN45Kjb1bRcuWe52S3J3v++ADlE/TNhnLki1h54LBfPqe2i2kACYgprHOCc71bBX+cKkFM+LuyrLlbsQUIY42s4Vl5nT4v7RHwST6YC4bspBP0jXvl6LCUiZ2c5tD0Lz0SctePq8LmuqcA9di4Ibkkfpz8TvW56S2jybaXo8FXmoqK21n2DzW/bh43ESE4kXA+TVZTBy1wDDKLO2pMB54XgW/3KIi9AihRYQhiz/Yc+mhahJamVu2ZqCHEC+8KHE5SEyPeHBMnLDZXZYLMkZ55X5p6PDFPSSD+OVuhpfH91h2gvRDEtK5wxs/ULfNJzQHLfV+jqAiCaV4e7zi6YGxaPUHsHt7RlHoeAC7ZFO1lgkxbWiqnyHpBuoG11tRlqkNZQCuWXHmiLU93CCxVqAO+JUdGRDUEwK/e3kA+jxZAGQPfqMhDAfOLiSaDCJPYiRbxNiVB8Q0Kqx0Z+o4kWBs8Z9383zVGFzocu1NIdiAMRUAA3Dq5gI2wXdFYhQBB0X8yb8Q2m6cTwkVER1TEaTfuj7k5Olr4Hgz6P8jl3XWGPkCbfVzc+tpcXPMy9WEAvScyNEFs4+77G80b0cC3YmXyqo1S20B3sL1NHFLlACS4MPhjHIN4rJCRppOLWXo3Fpl0D159WN3HUG8ny/cODqP5j9bxNQEcCAwEAAaNQME4wHQYDVR0OBBYEFJ9Q20q6/vsUrJWBK+v8IeDW5IMnMB8GA1UdIwQYMBaAFJ9Q20q6/vsUrJWBK+v8IeDW5IMnMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIBAErx8ymqWvSh9g78eGIoNSE/gSeUxqJdW5U1BdNkMy7Q/oUlah63Opr366ds7nPMBpZJYhsTDUhA9tQ7attIwsLbeerYi4fKOl60WLHUR/3uniNydm4ThsQYWHd63V7WKFzBA+tM1nkh/KgPrRWWBJ5qpyNmuqOKO5APBmoWhEj02oOo0qpZx3t7sjI6FET0sAwy6eycxju2cnzGPMWK/eiTkqeQNZgzISMvGjImAUcqMpsgIM6FRvErhyF2MF6XOz3GsG7HssbYPjsFBarXEu9Qn8FO5jg5tD0x5pgheCS+PSoWdvFpqmiiZGzRkbrRIuaEZY3FG3o4RxajrACiQPYXnk1n1YORSgnf3LFfS6XFrGgH6fJLuYxkeN3Y9P4yS6CPOogRvDtXalXFGN7PyVyyNSB2q093sGu3zBBXBmr01uwjG++6osGTwO153jGVkypB/bw3MDRAqM26lGOzlyNeHdvKjqGiHihjClbhsGu3P6BEFazWemwvGPuan+BLRVmc/YfJv/zMmlMwhLH3TKAUGo+ro5FapCRiUMBBu0U6xDZAkt95Dz1tZT5pGxSo8AHiLxiUH3edtukueTepdizfWp9ZvH/gtqgYX55V85RAXJLQhk6yiTGa2xdNZJGsTp0NY7S/+1tyrd5OEl5LsDbBCQmNpfm7L2Nt2S45uKbM

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = 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

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = http://adfs.flowserve.com/adfs/services/trust

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://adfs.flowserve.com/adfs/ls

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url =

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = MIIC4DCCAcigAwIBAgIQYQxnUIiFCZ5KZ2Uk0rFWADANBgkqhkiG9w0BAQsFADAsMSowKAYDVQQDEyFBREZTIFNpZ25pbmcgLSBhZGZzLmZsb3dzZXJ2ZS5jb20wHhcNMTgwNjA1MTQyNDE3WhcNMTkwNjA1MTQyNDE3WjAsMSowKAYDVQQDEyFBREZTIFNpZ25pbmcgLSBhZGZzLmZsb3dzZXJ2ZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCxB1PLGkD9M+jn/IQOaN7ci8JJwkiC1sVb7en+acM9xSaSZ62GudxBcJNIy9fTuv7jwd5S78AdKi55PxEmhfWyHNjd65PSCITAPOFcKnt4mABigEtSP0CdXqSCHfOdd6A1H3GiIIZrwUfEVo0KR7YhXAdLzEcEdpa8fJAtA0PPqUmh4im3CowvCHYOpmggoF05nMrqPGCU6+RxgNbgsxq8zUzqTCDTNnmRgnJso+WUnQKTYfzfMY2A6fjVaQqwb9TdI2DCV4z700jHuE9jauNbYsYZQCLchmWow+8ibk2ENLn2tRf9rHGz3LesXdsyh3WjbTuZxgvGBnpCRYOu6puFAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJL9nMlsu2CVBlY6W8MOZTOfpRNewxPiMVyCksCkJz27MAhJptMSCqwjS/mFcZ+r9cm7KwQ/JAyMlJifHOcbqu4HZBmH8qXO4GrrBeGPbtg1y8lPM7K8/M4CXMh2NtMYf0R4pNLf0lrZj4y3UrFFuCcpllUweRPEDyHunp22yTvC+zALiWSz0SR3/vtLBpbXKWBmeRu+CugUA81H1y906OJQK7KPnKffN9uGatnzvjw1Synptm9Sd8mHl30h+w9kOLsET1cw5OvxwrMYHSQp9RiN1kM6V/qQCYAbsRauN+LbRyexofDskRF6lT34yEbWK2y8S/c0XjwnMAhPhb/RogI=


# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint =
# onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed =

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = true

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = true

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = Enspir Solutions, LLC
onelogin.saml2.organization.displayname = Enspir Solutions, LLC
onelogin.saml2.organization.url = https://enspir.com
onelogin.saml2.organization.lang =

# Contacts
onelogin.saml2.contacts.technical.given_name = Kelly Graves
onelogin.saml2.contacts.technical.email_address = kelly@enspir.com
onelogin.saml2.contacts.support.given_name = Shubham Vajpayee
onelogin.saml2.contacts.support.email_address = support@enspir.com
