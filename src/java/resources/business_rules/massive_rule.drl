dialect "mvel"

import java.math.BigDecimal;
import com.flowserve.system606.model.PerformanceObligation;
import com.flowserve.system606.model.Metric;
import com.flowserve.system606.model.MetricPriorPeriod;
import java.util.logging.Logger;
global Logger logger;

rule "Calculate Estimated Gross Profit and Margin"

    // Needed only to support tab-out ajax requests on the UI.
    when
        // Pull input values needed for this calculation.
        pob : PerformanceObligation()  // If a pob exists
        transactionPrice : Metric(metricType.id == "TRANSACTION_PRICE", value != null)  // if this metric exists and is not null, initialize variable.
        estimatedCostAtCompletion : Metric(metricType.id == "ESTIMATED_COST_AT_COMPLETION", value != null)
        estimatedGrossProfit : Metric(metricType.id == "ESTIMATED_GROSS_PROFIT")  // Initialize variable for calc result.
        estimatedGrossMargin : Metric(metricType.id == "ESTIMATED_GROSS_MARGIN")
    then
        // Calculate all outputs possible using these inputs.
        modify (estimatedGrossProfit) { value = (transactionPrice.value - estimatedCostAtCompletion.value)};
        modify (estimatedGrossMargin) { value = (estimatedGrossProfit.value / transactionPrice.value)};
end


rule "Calculate EAC Change"

    // Needed only to support tab-out ajax requests on the UI.
    when
        // Pull input values needed for this calculation.
        pob : PerformanceObligation()
        estimatedCostAtCompletion : Metric(metricType.id == "ESTIMATED_COST_AT_COMPLETION", value != null)
        estimatedCostAtCompletionPriorPeriod : MetricPriorPeriod(metricType.id == "ESTIMATED_COST_AT_COMPLETION", value != null)
        changeInEstimate : Metric(metricType.id == "CHANGE_IN_ESTIMATED_COST_AT_COMPLETION")
    then
        modify (changeInEstimate) { value = (estimatedCostAtCompletionPriorPeriod.value - estimatedCostAtCompletion.value)};
end

rule "Calculate Cumulative Total ITD Costs, Percent Complete, Revenue Earned to Date, Cumulative Revenue to Recognize"
    // We have everything we need, run all calcs.
    when
        pob : PerformanceObligation()
        costIncurred : Metric(metricType.id == "CUMULATIVE_COST_INCURRED", value != null)       // null check means don't run this entire rule if the metric value is null.  We may have to break the rules up and pull the ones that rely on prior period to their own rule but proceed here for now.
        thirdPartyProgress : Metric(metricType.id == "CUMULATIVE_THIRD_PARTY_PROGRESS", value != null)
        intercoProgress : Metric(metricType.id == "CUMULATIVE_INTERCOMPANY_PROGRESS", value != null)
        estimatedCostAtCompletion : Metric(metricType.id == "ESTIMATED_COST_AT_COMPLETION", value != null)
        totalITDCosts : Metric(metricType.id == "CUMULATIVE_TOTAL_ITD_COSTS")               // don't worry about null check here since we setting this as output calc below.  it is null initially.
        percentComplete : Metric(metricType.id == "PERCENT_COMPLETE")                       // don't worry about null check here since we setting this as output calc below.  it is null initially.
    then
        modify (totalITDCosts) { value = (costIncurred.value + thirdPartyProgress.value + intercoProgress.value)};
        modify (percentComplete) { value = (totalITDCosts.value / estimatedCostAtCompletion.value)};
end









