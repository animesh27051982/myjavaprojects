#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  true

#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://enspir.net

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://flowserve.enspir.net/rcs/samlAssertionConsumer.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = https://flowserve.enspir.net/rcs/samlLogout.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert = 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

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = 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

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = http://adfs.flowserve.com/adfs/services/trust

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://adfs.flowserve.com/adfs/ls

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url =

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = MIIC4DCCAcigAwIBAgIQYQxnUIiFCZ5KZ2Uk0rFWADANBgkqhkiG9w0BAQsFADAsMSowKAYDVQQDEyFBREZTIFNpZ25pbmcgLSBhZGZzLmZsb3dzZXJ2ZS5jb20wHhcNMTgwNjA1MTQyNDE3WhcNMTkwNjA1MTQyNDE3WjAsMSowKAYDVQQDEyFBREZTIFNpZ25pbmcgLSBhZGZzLmZsb3dzZXJ2ZS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCxB1PLGkD9M+jn/IQOaN7ci8JJwkiC1sVb7en+acM9xSaSZ62GudxBcJNIy9fTuv7jwd5S78AdKi55PxEmhfWyHNjd65PSCITAPOFcKnt4mABigEtSP0CdXqSCHfOdd6A1H3GiIIZrwUfEVo0KR7YhXAdLzEcEdpa8fJAtA0PPqUmh4im3CowvCHYOpmggoF05nMrqPGCU6+RxgNbgsxq8zUzqTCDTNnmRgnJso+WUnQKTYfzfMY2A6fjVaQqwb9TdI2DCV4z700jHuE9jauNbYsYZQCLchmWow+8ibk2ENLn2tRf9rHGz3LesXdsyh3WjbTuZxgvGBnpCRYOu6puFAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJL9nMlsu2CVBlY6W8MOZTOfpRNewxPiMVyCksCkJz27MAhJptMSCqwjS/mFcZ+r9cm7KwQ/JAyMlJifHOcbqu4HZBmH8qXO4GrrBeGPbtg1y8lPM7K8/M4CXMh2NtMYf0R4pNLf0lrZj4y3UrFFuCcpllUweRPEDyHunp22yTvC+zALiWSz0SR3/vtLBpbXKWBmeRu+CugUA81H1y906OJQK7KPnKffN9uGatnzvjw1Synptm9Sd8mHl30h+w9kOLsET1cw5OvxwrMYHSQp9RiN1kM6V/qQCYAbsRauN+LbRyexofDskRF6lT34yEbWK2y8S/c0XjwnMAhPhb/RogI=


# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint =
# onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed =

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = true

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = true

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = true

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2001/04/xmldsig-more#rsa-sha256

# Organization
onelogin.saml2.organization.name = Enspir Solutions, LLC
onelogin.saml2.organization.displayname = Enspir Solutions, LLC
onelogin.saml2.organization.url = https://enspir.com
onelogin.saml2.organization.lang =

# Contacts
onelogin.saml2.contacts.technical.given_name = Kelly Graves
onelogin.saml2.contacts.technical.email_address = kelly@enspir.com
onelogin.saml2.contacts.support.given_name = Shubham Vajpayee
onelogin.saml2.contacts.support.email_address = support@enspir.com
